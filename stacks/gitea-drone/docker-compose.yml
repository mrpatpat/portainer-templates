version: "2"

services:
  gitea:
    image: gitea/gitea:latest
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - ROOT_URL=http://${TRAEFIK_GITEA_DOMAIN}
      - SSH_DOMAIN=${TRAEFIK_GITEA_DOMAIN}
    restart: always
    ports:
      - 3000
      - 22
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitea-${TRAEFIK_NAME}.entrypoints=http"
      - "traefik.http.routers.gitea-${TRAEFIK_NAME}.rule=Host(`${TRAEFIK_GITEA_DOMAIN}`)"
      - "traefik.http.middlewares.gitea-${TRAEFIK_NAME}-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.gitea-${TRAEFIK_NAME}.middlewares=gitea-${TRAEFIK_NAME}-https-redirect"
      - "traefik.http.routers.gitea-${TRAEFIK_NAME}-secure.entrypoints=https"
      - "traefik.http.routers.gitea-${TRAEFIK_NAME}-secure.rule=Host(`${TRAEFIK_GITEA_DOMAIN}`)"
      - "traefik.http.routers.gitea-${TRAEFIK_NAME}-secure.tls=true"
      - "traefik.http.routers.gitea-${TRAEFIK_NAME}-secure.tls.certresolver=http"
      - "traefik.http.routers.gitea-${TRAEFIK_NAME}-secure.service=gitea-${TRAEFIK_NAME}"
      - "traefik.docker.network=proxy"

  gitea-db:
    image: postgres:alpine
    ports:
      - 5432
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gitea
    networks:
      - proxy

  drone-server:
    image: drone/drone:0.8
    ports:
      - 8000
      - 9000
    restart: always
    depends_on:
      - gitea
    environment:
      - DRONE_OPEN=true
      - DRONE_HOST=http://${TRAEFIK_DRONE_DOMAIN}
      - DRONE_GITEA=true
      - DRONE_GITEA_URL=http://gitea:3000
      - DRONE_SECRET=secret
      - DRONE_NETWORK=proxy
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.drone-${TRAEFIK_NAME}.entrypoints=http"
      - "traefik.http.routers.drone-${TRAEFIK_NAME}.rule=Host(`${TRAEFIK_DRONE_DOMAIN}`)"
      - "traefik.http.middlewares.drone-${TRAEFIK_NAME}-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.drone-${TRAEFIK_NAME}.middlewares=drone-${TRAEFIK_NAME}-https-redirect"
      - "traefik.http.routers.drone-${TRAEFIK_NAME}-secure.entrypoints=https"
      - "traefik.http.routers.drone-${TRAEFIK_NAME}-secure.rule=Host(`${TRAEFIK_DRONE_DOMAIN}`)"
      - "traefik.http.routers.drone-${TRAEFIK_NAME}-secure.tls=true"
      - "traefik.http.routers.drone-${TRAEFIK_NAME}-secure.tls.certresolver=http"
      - "traefik.http.routers.drone-${TRAEFIK_NAME}-secure.service=drone-${TRAEFIK_NAME}"
      - "traefik.docker.network=proxy"

  drone-agent:
    image: drone/agent:0.8
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=drone-server:9000
      - DRONE_SECRET=secret
    networks:
      - proxy

networks:
  proxy:
    external:
      name: proxy